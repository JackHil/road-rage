#!/usr/bin/python2

import Queue
import subprocess
import sys

PER_HOUR = '10000'
CITIES = ['austin', 'baton_rouge', 'seattle', 'sf']
MODES = ['fifo', 'auction-sys', 'auction-no-sys', 'equal-sys', 'equal-no-sys',
         'fixed-sys', 'fixed-no-sys']
TRIALS = 3
THREADS = 4

def launch(argv):
  print 'Running:', ' '.join(argv)
  return subprocess.Popen(argv)

if __name__ == '__main__':
  queue = Queue.Queue()
  command = sys.argv[1]
  for city in CITIES:
    for trial_num in xrange(1, TRIALS + 1):
      trial = str(trial_num)
      if command == 'generate':
        queue.put(
          ['./tools/auction_experiment', 'all', city, PER_HOUR, trial]
        )
      for mode in MODES:
        if command == 'run':
          # TODO do it for each thing in scenarios/
          queue.put(['./tools/run', '-'.join([city, trial, mode])])
        if command == 'finalize':
          # TODO do it for each thing in logs/.
          queue.put(['./tools/finalize', '-'.join([city, trial, mode])])

  processes = set()
  for i in xrange(THREADS):
    if not queue.empty():
      processes.add(launch(queue.get()))

  try:
    while len(processes) > 0:
      reap = set([p for p in processes if p.poll() is not None])
      processes -= reap
      # Replace with new processes
      for i in xrange(len(reap)):
        if not queue.empty():
          processes.add(launch(queue.get()))
  except KeyboardInterrupt:
    sys.exit
