#!/usr/bin/python2

# TODO elegant shutdown

import multiprocessing
import subprocess

PER_HOUR = '25000'
CITIES = ['austin', 'baton_rouge', 'seattle', 'sf']
MODES = ['fifo', 'auction-sys', 'auction-no-sys', 'equal-sys', 'equal-no-sys',
         'fixed-sys', 'fixed-no-sys']
THREADS = 2

class Worker(multiprocessing.Process):
  def __init__(self, queue):
    multiprocessing.Process.__init__(self)
    self.queue = queue

  def run(self):
    while not self.queue.empty():
      job = self.queue.get()
      try:
        print "Running", job
        subprocess.call(job, shell=True)
        print job, "is done"
      except:
        print "Problem!"
      queue.task_done()

if __name__ == '__main__':
  queue = multiprocessing.JoinableQueue()
  for city in CITIES:
    # Keep only one set of put()s active ever
    queue.put('./tools/auction_experiment all ' + city + ' ' + PER_HOUR)
    for mode in MODES:
      #queue.put('./tools/run ' + city + '-' + mode)
      #queue.put('./tools/finalize ' + city + '-' + mode)
      pass

  workers = []
  for i in xrange(THREADS):
    worker = Worker(queue)
    workers.append(worker)
    worker.start()

  queue.join()
